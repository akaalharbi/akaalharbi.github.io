<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | أحمد الحربي</title>
    <link>https://akaalharbi.github.io/ar/post/</link>
      <atom:link href="https://akaalharbi.github.io/ar/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ar</language><lastBuildDate>Mon, 04 Sep 2023 20:00:00 +0000</lastBuildDate>
    <image>
      <url>https://akaalharbi.github.io/media/logo_hub46516a2f96be106613fa4551e055d59_482_300x300_fit_lanczos_3.png</url>
      <title>Posts</title>
      <link>https://akaalharbi.github.io/ar/post/</link>
    </image>
    
    <item>
      <title>كيف يعمل الكوانتم أنيلر (كمبيوتر دي-ويف)</title>
      <link>https://akaalharbi.github.io/ar/post/4-d-wave-quantum-annealer/</link>
      <pubDate>Mon, 04 Sep 2023 20:00:00 +0000</pubDate>
      <guid>https://akaalharbi.github.io/ar/post/4-d-wave-quantum-annealer/</guid>
      <description>&lt;style&gt;
h1, h2, h3, h4, h5, h6, h7
{
font-weight: bold; // it was normal
}
&lt;/style&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;فهرس المحتويات&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#مقدمة&#34;&gt;مقدمة&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#كيف-يعمل-كمبيوتر-الكوانتم-أنيلر&#34;&gt;كيف يعمل كمبيوتر الكوانتم أنيلر&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#تجربة-لكمبيوتر-دي-ويف&#34;&gt;تجربة لكمبيوتر دي-ويف&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#خاتمة&#34;&gt;خاتمة&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#مراجع&#34;&gt;مراجع&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;مقدمة&#34;&gt;مقدمة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
كنت منبهر من دعاية د-ويف D-Wave عن الكوانتم كمبيوتر (الحاسب الكمي) Quantum Computer ب5627 كيوبت. وحصلت لي فرصة هذا الأسبوع لحضور مدرسة صيفية عن الكوانتم الأنيلر في معهد يوليش للأبحاث Forschungszentrum Jülich. &lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
أنا جدا ممتن للمنظمين على إتاحتهم الفرصة لجميع المهتمين لتجربة الكوانتم الكمبيوتر  وتدريبهم عليه تقريبا بلا مقابل. للمقارنة لو أراد شخص تدريب من شركة دي-ويف D-Wave سيدفع تقريبا 1000 دولار، ولتجربة الكمبيوتر سيدفع 4000 دولار لصلاحية وصول لمدة شهر (بدورة يوليش صلاحية الوصول أكثر من شهر!)&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
وخلاصة انطباعي إن كمبيوتر دي-ويف مخيب للآمال وقدرته في الواقع عليها علامات استفهام كثيرة، وبالنسبة لي أرى من الأفضل لي استخدم كمبيوتر عادي.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
 في هذه المقالة سنرى بشكل مبسط كيف يعمل الكوانتم أنيلر (الكوانتم كمبيوتر المبني على الأنيلر)، وما هي سرعة حله للمسائل. وبعدها سنرى أداء كمبيوتر دي-ويف في الواقع.
&lt;/p&gt;
&lt;h2 id=&#34;كيف-يعمل-كمبيوتر-الكوانتم-أنيلر&#34;&gt;كيف يعمل كمبيوتر الكوانتم أنيلر&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
ملاحظة: المجال ما هو تخصصي لكني حاولت أراجع فهمي مع شخص متخصص.
&lt;p&gt;الكوانتم أنيلر يحل المسألة التالية:&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;$$ min_{x_i = 0, 1} \left(\sum_{i=0}^{N-1} a_i x_i  + \sum_{i&amp;lt;j}^{N-1} b_{ij} x_i x_j  \right)$$&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
هذه المسألة NP-Hard، ولا يعني أنها غير قابلة للحل ولكن وقت الحل على الأسوأ أسي. 
&lt;p&gt;والمبهر بالموضوع إن هذه المعادلة تمثل نظام فيزيائي بإمكاننا إنشائه وأقل طاقة يكون فيها هذا النظام الفيزيائي هو ما يقابل الحل لمعادلتنا!&lt;/p&gt;
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;quantum-annealer.png&#34; alt=&#34;طاقات الوضع&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
بشكل أدق نبدأ بنظام فيزيائي بسيط بأقل طاقة وضع(أقصى اليسار بالرسمة)، ومن ثم نغير النظام ببطء حتى نصل للنظام اللذي يمثل مسألتنا (أقصى اليمين). وبحسب النظرية الأساسية للكوانتم الأنيلر فإن هذا سيضمن لنا عندما نصل للنظام اللذي يمثل مسألتنا بأننا سنكون بأقل طاقة وضع، على فرض إن حركتنا كانت بطيئة بشكل كافي.
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
ولنرى تفصيل أكثر لما يعني ببطء، نتحاج أن نرى رسمة مستويات الطاقة اللتي يمكن أن يكون النظام فيها :
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;ground_states.jpg&#34; alt=&#34;طاقات الوضع&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
لو قرأنا الرسم من الأسفل للأعلى سنرى أن المنحنى بالأسفل يمثل أقل طاقة وضع يمكن أن يكون فيها النظام، والمنحنى الأعلى منه ثاني أصغر طاقة  وضع للنظام.&lt;/p&gt;
 &lt;p dir=&#34;rtl&#34;&gt;
وفي أقصى اليسار النظام البسيط الذي ابتدأنا فيه، وكل ما اتجهنا لليمين يزيد الوقت ويتغير النظام حتى نصل للنظام اللذي يمثل مسألتنا.&lt;/p&gt;
 &lt;p dir=&#34;rtl&#34;&gt;
وفي الرسمة هناك قيمة بارزة باسم g، هذه القيمة هي أقل فرق بين المستوى الطاقة الأدنى مقارنة بمستوى الطاقة الأعلى. وتبين  أن الوقت اللي نحتاجه يتماشى
&lt;/p&gt;
&lt;p&gt;$$\frac{1}{g^2}$$&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
أي كل ما قل الفرق كل ما احتجنا وقت أكثر، لو قل فرق الطاقة إلى الثلث لاحتجنا ل9 أضعاف الوقت!
هذا أول خبر سيء، والخبر الأسوأ إن g تقل أسيا مع مرور الوقت! لمعرفة تفاصيل أكثر راجع محاضرات سكوت آرنسون وابحث عن Spectral Gap. وبالنسبة لي هي المشكلة الأساسية بجهاز دي-ويف،  ولكن المشاكل لا تنتهي هنا.
&lt;/p&gt;
&lt;h2 id=&#34;تجربة-لكمبيوتر-دي-ويف&#34;&gt;تجربة لكمبيوتر دي-ويف&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
حاولت حل مسألة المسافر بجهاز دي-ويف بين 10 مدن (باختصار نبحث عن أقصر مسار يمر بين جميع المدن):
وبعد 100 قراءة وأخذ المتوسط بينها، أعطاني حل خاطئ (لاحظ مدينة وارسو Warsaw ما يزورها):&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;tsp.png&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
وحاولت تجربة المسألة على 15 مدينة وأعطاني الخطأ التالي:&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;failed_embedding.png&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
لنرى أولا مشكلة دقة الحل، أحد المحاضرين عرض هذه الرسمة&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;succ_rate.png&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
والتي تقول باختصار، بعد حد معين  كل ما كبر حجم المسألة كل ما كانت دقة الحل أسوء!&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
أما مشكلة التضمين (من دخول بتفاصيل)، عندما ندخل مسألة لكمبيوتر دي-ويف فإننا نصف روابط بين الكيوبتات، ولكن بكمبيوتر دي-ويف ليست كل الكيوبتات متصلة ببعضها.&lt;/p&gt; 
&lt;p dir=&#34;rtl&#34;&gt;
دي-ويف تحل المسألة بمعاملة أكثر من كيوبت كأنه كيوبت واحد، كما هو موضح في الصورة التالية:&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;embedding-sol.png&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
في تجربتنا لتسعة مدن كان تضمين المسألة كالتالي:&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;embedding_result.png&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;خاتمة&#34;&gt;خاتمة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
كان سقف توقعاتي عالي وكنت أتوقع ربما أستطيع كمبيوتر دي-ويف لإيجاد نتيجة جديدة، وتبين لي إنها أحلام يقظة في الوقت الحالي. في هذه المقالة تجاوزت شرح النفق الكمي، حيث لا أعرف متى إن المسألة ستسفيد من هذه الظاهرة.
&lt;/p&gt;
&lt;h2 id=&#34;مراجع&#34;&gt;مراجع&lt;/h2&gt;
&lt;ul dir=&#34;ltr&#34;&gt;
&lt;li&gt; Introduction to Quantum Information Science II Lecture Notes by Scott Aaronson &lt;/li&gt;
&lt;li&gt; Quantum Information Processing – Applications on Gate-based and Annealing System &lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>استخدام كل ما يمكن من الذاكرة</title>
      <link>https://akaalharbi.github.io/ar/post/3-squeezing-all-possible-bits/</link>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://akaalharbi.github.io/ar/post/3-squeezing-all-possible-bits/</guid>
      <description>&lt;style&gt;
h1, h2, h3, h4, h5, h6, h7
{
font-weight: bold; // it was normal
}
&lt;/style&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;فهرس المحتويات&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#مقدمة&#34;&gt;مقدمة&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#جداول-الهاش&#34;&gt;جداول الهاش&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#مخبأ-ملكة-الجمال&#34;&gt;مخبأ ملكة الجمال&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#السبر-الخطي&#34;&gt;السبر الخطي&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#السبر-الخطي-تجريبيا&#34;&gt;السبر الخطي تجريبيا&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#تسريع-السبر-الخطي-مع-معدلات-تعبئة-مرتفعة&#34;&gt;تسريع السبر الخطي مع معدلات تعبئة مرتفعة&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#حيلة-أخيرة&#34;&gt;حيلة أخيرة&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;مقدمة&#34;&gt;مقدمة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;الحالة لدينا كالتالي، في المرحلة الأولى نولد عدد كبير من العناصر شبه العشوائية، ونود أن نخزنها بمصفوفة. في المرحلة الثانية سيكون لدينا مولد ثاني لعناصر شبه عشوائية لنسميه، كل عنصر من المولد الثاني نود أن نتأكد هل يوجد عنصر مثله من المرحلة الأولى.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;آخر شهر تقريبا كنا نحاول كل ما يمكننا استخدامه من الذاكرة، نستطيع توليد عناصر عشوائية كما نريد وإن فقدنا أحدها نستطيع توليد عنصر جديد بدلا عنه.&lt;/p&gt;
&lt;h2 id=&#34;جداول-الهاش&#34;&gt;جداول الهاش&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;جداول الهاش Hash Tables تتميز بإن البحث فيها تكلفته تقريبا O(1).&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
باختصار مخل، لنضغ عنصر x داخل جدول هاش، نحسب دالة  h (نختارها قبل) ويكون موقع العنصر داخل الجدول هو h(x). لنبحث إن x موجود نذهب مباشرة إلى الخانة رقم h(x) ونرى هل x موجود أو لا. 
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;مشكلتنا إن عدد العناصر ضخم وأي وأي تقليل بحجم الجدول نحتاجه. مثلا هاش الكوكو Cucko-Hash يتميز بإن البحث فيه يحتاج بالمتوسط لاستدعائين للذاكرة . المشكلة الأولى إن لو كان لدينا ن من العناصر في المرحلة الأولى سيكون حجم الجدول سيكون ٢ن.  مشكلة ثانية هي إن الاستدعائين للذاكرة سيكونان لعنوانين عشوائين لذا سنتحمل عقوبة Cache-miss مرتين. &lt;/p&gt;
&lt;h2 id=&#34;مخبأ-ملكة-الجمال&#34;&gt;مخبأ ملكة الجمال&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;يترجم قوقل Cache Miss على إنه مخبأ ملكة الجمال، سنترجمها على إنها إخفاق الكاش.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;إخفاق الكاش  يحصل عندما يسأل المعالج ذاكرة الكاش عن عنوان من الذاكرة، وعندما يبحث الكاش داخل العناصر المخزنة لا يجده، لذا يطلب الكاش هذا الجزء من الذاكرة من الرام. هذه العملية تستغرق وقت طويل. مثال: لو كان المعالج يجري عملية كل ثانية سينتظر ٦ دقائق حتى تصله المعلومة من الذاكرة.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;system_latency.jpg&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;الصورة من كتاب 
&lt;a href=&#34;https://www.amazon.com/Systems-Performance-Brendan-Gregg-dp-0136820158/dp/0136820158&#34;&gt;Systems Performance: Enterprise and the Cloud by Brendan Gregg&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;السبر-الخطي&#34;&gt;السبر الخطي&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;أحد أبسط جداول الهاش هو السبر الخطي Linear Probing، فكرته لنضع العنصر y داخل الجدول، نحسب h(y) ونذهب للخانة رقم h(y)  (في الصورة افترضنا إن h(y) تساوي 8)&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;إن كانت الخانة فارغة نضع العنصر فيها، ما عدا ذلك نذهب للخانة المجاورة ونكرر السؤال الخانة فارغة: ضغ العنصر، لا اذهب للخانة المجاورة وهكذا دواليك.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;البحث مشابه لإضافة عنصر، مع اختلاف كل مرة ننتقل لخانة مجاورة نتأكد هل هي تساوي العنصر الذي نبحث عنه. نتوقف عندما نصل لخانة فارغة.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;عدد المرات اللتي نذهب للخانة المجاورة تعتمد على عدد العناصر الموجودة مقابل حجم المصفوفة، مثل لو كان عدد العناصر الموجودة يساوي عدد المصفوفة فسنزور عدد الخانات ما لانهاية من المرات. بشكل عام  لو كان عدد خانات جدول الهاش هو n وعدد العناصر اللي أضفناها للجدول هي m فسنسمي m/n=α أو معدل التعبئة.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;linear_probing.jpg&#34; alt=&#34;Linear Probing&#34; title=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;هذه المسألة هي أول مسألة حقيقية (أو غير تافهة)  حلها دونالد كنوث Donald Knuth. للاستزادة عن تاريخ المسألة اقرأ &lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;a href=&#34;http://aofa2013.lsi.upc.edu/slides/Viola.pdf&#34;&gt;50 years of Linear Probing Hashing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;السبر-الخطي-تجريبيا&#34;&gt;السبر الخطي تجريبيا&lt;/h3&gt;
&lt;p dir=&#34;rtl&#34;&gt;كنوث حسب عدد المرات المتوقعة نظريا لو كانت الدالة h(x) عشوائية.
أجرينا تجربة على معدلات تعبئة مختلفة&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;alpha, nlookup,        nprobes_lookup
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.50, 6780350 elm/sec, 1.5  probes/elm
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;0.63, 6456515 elm/sec, 3.15 probes/elm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;في السطر الأول معدل التعبئة هو نصف، بينما السطر الثاني معدل التعٰبئة ٠.٦٣.&lt;/p&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;لاحظ هنا لنبحث عن عنصر واحد عدد القراءات في السطر الثاني أكثر من الضعف (٣.١٥ خانة نقرأها) لكن الأداء ما قل للنصف!&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;هنا أنقذنا الكاش، لأنه عندما يقرأ عنصر من الذاكر سيقرأ عدد من العناصر المجاورة. للمزيد اقرأ عن خط الكاش cache-line. &lt;/p&gt;
&lt;h3 id=&#34;تسريع-السبر-الخطي-مع-معدلات-تعبئة-مرتفعة&#34;&gt;تسريع السبر الخطي مع معدلات تعبئة مرتفعة&lt;/h3&gt;
&lt;p dir=&#34;rtl&#34;&gt;لنفرض إن لدينا سيرفر حجم الرام تقريبا٣٧٠ قيقابايت واستهدفنا معدل تعبئة ٩٠٪، ولنفرض إن العناصر موزعة تقريبا بالتساوي على الخانات. سيكون عدد الفراغات موزع تقريبا بالتساوي، وبين كل فراغين حوالي ٣٧ قيقابايت&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;عندما نبحث عن عنصر غير موجود، وكنا غير محظوظين سنقرأ، في أسوأ الأحوال، تقريبا ٣٧ قيقابايت حتى نصل لخانة 
فارغة وننهي البحث.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;الأمور ليست بهذه السوداوية. لنرى عندما كنا نضع العناصر، كم نسبة العناصر اللتي احتاجت للتأكد من خانة واحدة  عند وضعها، ونسبة العناصر اللتي احتاجت للتأكد من خانتين متجاورتين لوضعهما، إلخ.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;img src=&#34;90_filling_rate.jpg&#34; alt=&#34;&#34; title=&#34;&#34; /&gt;
لاحظ من الرسم عدد العناصر التي تحتاج لزيارة خانات كثير عندما نريد إضافتها لجدول الهاش يقل في البداية بسرعة ثم يتباطأ.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;ولو أردنا قيم أدق &lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  1) = 0.55
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  2) = 0.69
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  3) = 0.76
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  4) = 0.80
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  5) = 0.83
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  6) = 0.85
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  7) = 0.87
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  8) = 0.88
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;=  9) = 0.89
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 10) = 0.90
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 11) = 0.91
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 12) = 0.917
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 13) = 0.92
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 14) = 0.927
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 15) = 0.93
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Pr(nprobes &amp;lt;= 16) = 0.936
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p dir=&#34;rtl&#34;&gt;من السطر الأخير عندما كنا نستهدف معدل تعبئة ٩٠٪، تقريبا ٩٣٪ من العناصر لن يحتاج لأكثر من ١٦ قراءة لخانة مجاورة عند إضافته.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;لذا لو اضفنا هذه العناصر فقط لن نحتاج في البحث لأكثر من قراءة ١٦ خانة مجاورة، وحالفنا الحظ هنا لأن خط الكاش حجمه ٦٤ بايت (٥١٢ بت) لو كان حجم العنصر ٤ بايت (٣٢ بت) فقراءة خانة واحدة هي نفس تكلفة قراءة ١٦ خانة مجاورة.&lt;/p&gt;
&lt;h2 id=&#34;حيلة-أخيرة&#34;&gt;حيلة أخيرة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;نستطيع استخدام رقم الخانة للتخزين. مثلا لو كان لدينا العنصر ١٥٩٠، نستطيع تخزين ١٥ في الخانة رقم ٩٠ (على فرض إنها موجودة) ولاسترجاع القيمة نضع رقم الخانة بجانب القيمة الموجودة بالخانة.&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;تفاصيل الطريقة بحالتنا سنتجاهله.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>أول شهر من الدراسة</title>
      <link>https://akaalharbi.github.io/ar/post/first-month/</link>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://akaalharbi.github.io/ar/post/first-month/</guid>
      <description>&lt;style&gt;
h1, h2, h3, h4, h5, h6, h7
{
font-weight: bold; // it was normal
}
&lt;/style&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;فهرس المحتويات&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#التجربة-الثانية-أعلى-رقم-على-عدة-أنوية-بمعالج-واحد&#34;&gt;التجربة الثانية أعلى رقم على عدة أنوية بمعالج واحد&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#التجربة-ثلاثة-أعلى-رقم-على-سيرفر-الجامعة&#34;&gt;التجربة ثلاثة أعلى رقم على سيرفر الجامعة&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#التجربة-أربعة-أعلى-رقم-على-عدة-أجهزة-من-سيرفرات-الجامعة&#34;&gt;التجربة أربعة أعلى رقم على عدة أجهزة من سيرفرات الجامعة&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h1 id=&#34;مقدمة&#34;&gt;مقدمة&lt;/h1&gt;
&lt;p dir=&#34;rtl&#34;&gt;
في البداية كنت أحاول فهم ورقة كتبها المشرف وفيها حسبة لعدة خوارزميات بالطرق الثلاث المذكورة في التدوينة السابقة. بالنسبة لي ما كان واضح كيف نحسب التكلفة بنموذج VLSI
&lt;/p&gt;
&lt;h1 id=&#34;أول-مقابلة-مع-المشرف&#34;&gt;أول مقابلة مع المشرف&lt;/h1&gt;
&lt;p dir=&#34;rtl&#34;&gt;
في البداية شرح لي إجراءات التسجيل، وحسب ما فهمت أحتاج لأسجل بثلاث جهات: الجامعة، اللاب الذي يعمل فيه، مدرسة الدكتوراه. حتى هذه اللحظة تسجيلي مؤكد في اللاب بينما الباقي تحت الإجراء.
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
ذكرت له مشكلتي بفهم حسبة التكلفة. اقترح علي كتابة الكود بلغة C  والتجربة بنفسي بدل قراءة الورقة. والهدف إننا نصل لأعلى رقم ممكن كما في الورقة. أيضا طلب مني كتابة قاموس dictionary بلغة الـC. المرجع المقترح كان كتاب كنوث The Art of Computer Programming، وأيضا ورقة Cucko Hash.
&lt;/p&gt;
&lt;h1 id=&#34;سلسلة-التجارب&#34;&gt;سلسلة التجارب&lt;/h1&gt;
&lt;p dir=&#34;rtl&#34;&gt;
سنحاول تطبيق هجمة الرسالة الضخمة long message attack على نسخة مصغرة من SHA256. الفكرة ببساطة مخلة هي لو كان لدينا دالة f عدد مخرجاتها محدود، فعند تجربتنا لعدد ضخم من المدخلات سيكون لدينا تكرار في المخرجات. وبالإمكان تسريع الهجمة لو حفظنا الرسائل، للمزيد ابحث عن مفارقة عيد الميلاد Birthday Paradox.
&lt;p&gt;سنرمز لعدد البتات بالمخرجات بـn،&lt;/p&gt;
 &lt;/p&gt;
## التجربة الأولى أعلى رقم على نواة واحدة من المعالج
 &lt;p dir=&#34;rtl&#34;&gt;
هذه المرحلة كانت متعبة، أعدت التصميم أكثر من مرة وفي كل مرة أحتاج أتأكد بأن البرنامج سليم. أيضا كانت طريقة إدارتي للذاكرة كأن عندي ما لانهاية منها، وعند تجربة أرقام نوعا ما صغيرة، البرنامج استخدم كل الرام الموجود. 
&lt;p&gt;أشياء ساعدتني على تحسين الكود:&lt;/p&gt;
&lt;/p&gt;
 &lt;ul dir=&#34;rtl&#34;&gt;
  &lt;li&gt;تعليقات المشرف، مثلا قل استخدام الذاكرة بما لايقل عن ٣٢ مرة.&lt;/li&gt;
  &lt;li&gt;برنامج gdb&lt;/li&gt;
  &lt;li&gt;برنامج valgrind، كلمة free ما كانت موجودة بالكود.&lt;/li&gt;
&lt;/ul&gt; 
&lt;p&gt;كان بودي لو إن سجلت استهلاك الذاكرة والمعالج من أول محاولة لتسجيل تحسن الكود. أعلى رقم وصلت كان قريب ٤٠.&lt;/p&gt;
&lt;h2 id=&#34;التجربة-الثانية-أعلى-رقم-على-عدة-أنوية-بمعالج-واحد&#34;&gt;التجربة الثانية أعلى رقم على عدة أنوية بمعالج واحد&lt;/h2&gt;
 &lt;p dir=&#34;rtl&#34;&gt;
 هنا استخدمنا OpenMP، المشكلة اللي واجهتني هي إن الكود كان أعلى رقم يتعامل معه هو ٦٤ بت، بينما نود أن نصل لأرقام أعلى. ومرة ثانية احتجت لإعادة تنظيم الكود. جهازي فيه ١٤ نواة و ٢٠ ثريد. قارنت السرعة مع الكود بالتجربة الأولى، وكان أسرع بـ١٤ مرة. 
 &lt;/p&gt;
&lt;p&gt;أعلى رقم وصلت له كان ٦٥ بت.&lt;/p&gt;
&lt;h2 id=&#34;التجربة-ثلاثة-أعلى-رقم-على-سيرفر-الجامعة&#34;&gt;التجربة ثلاثة أعلى رقم على سيرفر الجامعة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
بالنسبة لي هنا الكود تقريبا نفسه، الشيء الجديد كان تجربتي للـBatch Scheduler لكلستر الجامعة (أضف صورة). اللاب يستخدم oarsub، لو أردت إرسال كود للكلستر، سيكون لدي مجلد بين جميع السيرفرات. ولتشغيل الكود أحدد البرنامج ومواصفات السيرفر، ومخرجات البرنامج ستكون بالمجلد المشترك.
أعلى رقم وصلت له كان ٧٥-بت لمدة يومين متواصلة من التشغيل.
 &lt;/p&gt;
&lt;h2 id=&#34;التجربة-أربعة-أعلى-رقم-على-عدة-أجهزة-من-سيرفرات-الجامعة&#34;&gt;التجربة أربعة أعلى رقم على عدة أجهزة من سيرفرات الجامعة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
 هدفنا أن نصل لـ٩٦ بت، وكانت النيةأن نستخدم MPI-Message Passing Interface. حاولنا حساب كم نحتاج لسيرفر لتطبيق الهجمة على ٩٦-بت (إن كان السيرفرات ستعمل لمدة يومين متواصلة) واتضح إننا نحتاج إلى ١٠٢٤ سيرفر. هذا الرقم ما تتحمله ميزانيتنا، لذا قررنا مراجعة الكود وكيف يمكن أن نسرعه.
 &lt;/p&gt;
&lt;h1 id=&#34;خاتمة&#34;&gt;خاتمة&lt;/h1&gt;
&lt;p dir=&#34;rtl&#34;&gt;
حاليا مع كل تحسين استكشف موضوع جديد، وقائمة القراءة تتزايد لدي. جزء من المواضيع سأعرفها لو درست بنية الحواسيب Computer Archeticure، مثلا Cache-associatvitiy وكيف لو كانت الأداء سيكون أقل لو كانت الخطوات التي نمشي فيها على الشكل ٢-أس-ن، أيضا Page-Faults وكيف نحلها بـHuge-pages.
 &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>مقابلة الدكتوراه والتجهيز لما قبل بدء الدراسة</title>
      <link>https://akaalharbi.github.io/ar/post/interview-and-palnning/</link>
      <pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://akaalharbi.github.io/ar/post/interview-and-palnning/</guid>
      <description>&lt;style&gt;
h1, h2, h3, h4, h5, h6, h7
{
font-weight: bold; // it was normal
}
&lt;/style&gt;
&lt;details class=&#34;toc-inpage d-print-none  &#34; open&gt;
  &lt;summary class=&#34;font-weight-bold&#34;&gt;فهرس المحتويات&lt;/summary&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#مقدمة&#34;&gt;مقدمة&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#مقابلة-قبول-الدكتوراه&#34;&gt;مقابلة قبول الدكتوراه&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#موضوع-الرسالة&#34;&gt;موضوع الرسالة&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href=&#34;#خلفية-قياس-صعوبة-الهجمات-على-التشفير&#34;&gt;خلفية: قياس صعوبة الهجمات على التشفير&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#نماذج-أخرى&#34;&gt;نماذج أخرى&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#الخطة-لما-قبل-الدراسة&#34;&gt;الخطة لما قبل الدراسة&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;/details&gt;

&lt;h2 id=&#34;مقدمة&#34;&gt;مقدمة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;أنا طالب تخصصي رياضيات بالبكالوريوس والماجستير، وسأكمل دراسة دكتوراه بعلوم الحاسب بجامعة السوربون ابتداء من سبتمبر ٢٠٢٢.&lt;/p&gt;
&lt;h2 id=&#34;مقابلة-قبول-الدكتوراه&#34;&gt;مقابلة قبول الدكتوراه&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
خلال المراسلات للبحث عن قبول أبدى أحد الدكاترة(لاحقا مشرفي) وأرسل لي &lt;a href=&#34;https://eprint.iacr.org/2022/197&#34;&gt;ورقة&lt;/a&gt; مع امتحان سيسألني عنه وحدد موعد للمقابلة عن طريق زوم zoom.
 &lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;في بداية المقابلة ناقش الحلول معي، ثم بدأ يسألني لم أنا مهتم بالعمل معه؟ وما هي خلفيتي؟ وعن المواضيع hاللي أنا مهتم بالعمل فيها؟ وهل تواصلت مع أشخاص آخرين؟ وفي إطار هذا السؤال بدأ يشرح عن مجموعات بحثية في أوروبا واقترح علي عدة أسماء أتواصل معهم. 
&lt;p&gt;ومن ثم ذكر لي خلفيته وعن المسائل اللي مهتم بالعمل فيها وعن النتائج المهتم أن يراها خلال مدى ثلاث سنين. في نهاية المقابلة ذكر لي شفويا إنه مستعد لقبولي كطالب لديه&lt;/p&gt;&lt;/p&gt;
&lt;h2 id=&#34;موضوع-الرسالة&#34;&gt;موضوع الرسالة&lt;/h2&gt;
&lt;h3 id=&#34;خلفية-قياس-صعوبة-الهجمات-على-التشفير&#34;&gt;خلفية: قياس صعوبة الهجمات على التشفير&lt;/h3&gt;
&lt;p dir=&#34;rtl&#34;&gt;
في التشفير ليس هناك مقياس واضح للتعقيد الحسابي Complexity. لو استخدمنا ترميز &lt;a href=&#34;https://ar.wikipedia.org/wiki/%D8%AA%D9%85%D8%AB%D9%8A%D9%84_O_%D8%A7%D9%84%D9%83%D8%A8%D8%B1%D9%89&#34;&gt;Big-O&lt;/a&gt; لأصبحت صعوبة أغلب المسائل في التشفير متناظر كلها ثابتة &lt;span dir=&#34;ltr&#34;&gt;O(1)&lt;/span&gt;، مثلا لكسر معيار التشفير المتقدم AES نحتاج على الأكثر $2^{256}$  تخمين وهو ما يندرج تحت تعريف&lt;span dir=&#34;ltr&#34;&gt;O(1)&lt;/span&gt;.
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;النموذج المتبع هو إننا نعد كم مرة استدعينا دالة التشفير، ونرى ما إذا كانت الهجمة الجديدة عدد استدعاءاتها أقل من البحث العشوائي.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;مثال&lt;/strong&gt;&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
 دالة التشفير  AES-128 تستخذم مفتاح طوله 128-بت. لتشفير نص m بالمفتاح k سنكتب شيء مشابه
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ciphertext = AES_128(m, k) 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p dir=&#34;rtl&#34;&gt;لو  عرف االمهاجم المفتاح k سيعتبر إنه كسر التشفير بحالتنا هذه. لنفرض إن لدى المهاجم النص m، والنص المشفر ciphertext وسيخمن k. سيجرب مفتاح مفتاح، ومع كل مفتاح سيستدعي &lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;AES-128(m, guess)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p dir=&#34;rtl&#34;&gt;
في حالتنا هذه سيحتاج بأسوأ الأحوال لتجربة 
&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;
  &lt;msup&gt;
    &lt;mn&gt;2&lt;/mn&gt;
    &lt;mrow data-mjx-texclass=&#34;ORD&#34;&gt;
      &lt;mn&gt;128&lt;/mn&gt;
    &lt;/mrow&gt;
  &lt;/msup&gt;
&lt;/math&gt;
مفتاح. لو اكتشفنا طريقة لإيجاد k بعدد حسابات أقل من من هذا الرقم، ستعتبر هجمة.
&lt;/p&gt; 
&lt;h4 id=&#34;أين-تكمن-المشكلة-في-النموذج-بالأعلى&#34;&gt;أين تكمن المشكلة في النموذج بالأعلى؟&lt;/h4&gt;
&lt;p dir=&#34;rtl&#34;&gt;هناك فرض ضمني إن تكلفة الذاكرة هي نفس تكلفة المعالج. أيضا بحسب هذا لو احتجنا إلى لقراءة 1 تيرابايت فإن سرعة قراءة أول بت هي نفس سرعة قراءة آخر بت. لنفرض إننا استطعنا تخزين مفتاح AES-128 داخل ذَرّة واحدة، وصففنا جميع الذرات التي استخدمناها على خط مستقيم. عندئذ قراءة آخر مفتاح سيحتاج مننا على الأقل  تيراليون (عشرة أس 12) سنة. &lt;/p&gt;
&lt;h3 id=&#34;نماذج-أخرى&#34;&gt;نماذج أخرى&lt;/h3&gt;
&lt;h4 dir=&#34;rtl&#34;&gt;&lt;b&gt; الذاكرة المكلفة Expensive Memory &lt;/b&gt;&lt;/h4&gt;
&lt;p dir=&#34;rtl&#34;&gt;
أثناء مسابقة نيست NIST لاختيار &lt;a href=&#34;https://csrc.nist.gov/Projects/post-quantum-cryptography&#34;&gt;تشفير ممانع للحواسيب الكمية&lt;/a&gt; برز نموذج الذاكرة المكلفة Expensive Memory Model، باختصار وقت قراءة البت رقم n يتماشى مع
&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;
  &lt;msqrt&gt;
    &lt;mi&gt;n&lt;/mi&gt;
  &lt;/msqrt&gt;
&lt;/math&gt;.
  حسب فهمي مشكلة هذا النموذج إنه لا يقابل بنية الحواسيب الموجودة، فهو يفرض ضمنيا إن لدينا عدة معالجات جميعها تشترك بنفس الذاكرة وسرعة الوصول للبت رقم n هي نفسها لجميع المعالجات. &lt;/p&gt;
&lt;h4 dir=&#34;rtl&#34;&gt;نموذج المساحة×بالزمن AT (موضوع الرسالة)&lt;/h4&gt;
&lt;p dir=&#34;rtl&#34;&gt; ما نملكه حاليا عدة أجهزة، وتكلفة قراءة الذاكرة داخل كل جهاز أسرع من التواصل مع الأجهزة الأخرى.
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
كيفية استخدام هذا النموذج في حساب تكلفة الهجمات هو لب العمل بالدكتوراه. إن كنت متحمس لمعرفة عن الفكرة بإمكانك قراءة الورقة &lt;a href=&#34;https://eprint.iacr.org/2022/197&#34;&gt;Nice Attacks&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;الخطة-لما-قبل-الدراسة&#34;&gt;الخطة لما قبل الدراسة&lt;/h2&gt;
&lt;p dir=&#34;rtl&#34;&gt;
وصلني القبول الرسمي ببداية شهر مايو، ولدي تقريبا من ٣ إلى ٤ أشهر حتى بداية الدراسة. 
&lt;/p&gt;
&lt;p dir=&#34;rtl&#34;&gt;
المجالات التي سأحاول دراستها:
&lt;/p&gt;
&lt;ul dir=&#34;rtl&#34;&gt;
  &lt;li&gt; تعقيد التواصل Communication Complexity
    &lt;ul&gt;
      &lt;li&gt; المستوى المطلوب: فكرة عامة عن المجال وعن طرق الحل المسائل اللتي يستهدفها المجال.
 &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt; لغة &lt;span dir=&#34;ltr&#34;&gt;C++&lt;/span&gt;
    &lt;ul&gt;
      &lt;li&gt; المستوى المطلوب: تغطية أساسيات اللغة ومعرفة بعض مكونات المكتبة المعيارية
 &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;p dir=&#34;rtl&#34;&gt;&lt;strong&gt; سأكتب أكثر عن المواضيع بالأعلى بتدوينات منفصلة. &lt;/strong&gt; &lt;/p&gt;
&lt;script defer src=&#34;https://cdn.commento.io/js/commento.js&#34;&gt;&lt;/script&gt;
&lt;div  id=&#34;commento&#34; dir=&#34;rtl&#34;&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
